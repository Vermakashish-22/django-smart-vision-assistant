from django.db import models
from doctor.models import Doctor 
from django.contrib.auth.models import User
import re

class Patient(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE, related_name='patient', null=True, blank=True)
    name = models.CharField(max_length=100)
    age = models.IntegerField()
    email = models.EmailField() 
    contact = models.CharField(max_length=20)
    blood_group = models.CharField(max_length=5, default='Unknown')
    assigned_doctor = models.ForeignKey(Doctor, on_delete=models.SET_NULL, null=True)
    appointment_date = models.DateField()
    appointment_time = models.TimeField()
    disease = models.CharField(max_length=200, blank=True, null=True)
    image = models.ImageField(upload_to='patient_images/', blank=True, null=True)

    def __str__(self):
        return self.name
    
class Consultation(models.Model):
    name = models.CharField(max_length=100)
    email = models.EmailField()
    # age = models.PositiveIntegerField()
    doctor = models.ForeignKey(Doctor, on_delete=models.CASCADE)
    prescription = models.TextField(help_text="Describe your eye-related problem")

    def __str__(self):
        return f"{self.name} - {self.doctor.user.username}"


class ConsultationPatient(models.Model):
    name = models.CharField(max_length=100)
    email = models.EmailField()
    age = models.PositiveIntegerField(null=False, blank=False)
    doctor = models.ForeignKey(Doctor, on_delete=models.CASCADE, null=True, blank=True)
    user_prescription = models.TextField(help_text="Describe your eye-related issue")
    ai_prescription = models.TextField(blank=True, null=True, help_text="Prescription generated by AI")
    date = models.DateField(auto_now_add=True)
    time = models.TimeField(auto_now_add=True)
    medicine_summary = models.TextField(blank=True, null=True)
    
    def extract_medicine(self):
        try:
            match = re.search(r"<strong>Suggested Medication:</strong><br>\s*(.+?)<br><br>", self.ai_prescription)
            if match:
                return match.group(1).strip()
        except:
            pass
        return "-"
    
    def __str__(self):
        return f"{self.name} - {self.doctor.user.username} - {self.date}"
